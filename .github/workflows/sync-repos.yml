name: Sync Frontend and Backend Repos

on:
  schedule:
    - cron: '0 */6 * * *'  # Fixed: removed extra asterisk
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: sync-repos
  cancel-in-progress: true

jobs:
  sync-repos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout analysis repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.WRITE_TOKEN }}
          fetch-depth: 1

      - name: Configure git
        run: |
          git config user.name "sync-bot"
          git config user.email "sync-bot@krishamaze.com"

      - name: Clean work dirs
        run: rm -rf frontend backend temp-frontend temp-backend

      # Clone frontend using token authentication
      - name: Clone Frontend
        run: |
          echo "Cloning Frontend..."
          if ! git clone --depth 1 --branch feature/dashboard-integration \
              https://x-access-token:${{ secrets.READ_TOKEN }}@github.com/krishamaze/finetune-ERP-frontend.git temp-frontend; then
            echo "Frontend clone failed"
            exit 1
          fi
          echo "Frontend clone successful"

      # Clone backend using token authentication
      - name: Clone Backend
        run: |
          echo "Cloning Backend..."
          if ! git clone --depth 1 --branch krishna/implement-phase-a1-admin-api-scaffold \
              https://x-access-token:${{ secrets.READ_TOKEN }}@github.com/krishamaze/finetune-ERP-backend.git temp-backend; then
            echo "Backend clone failed"
            exit 1
          fi
          echo "Backend clone successful"

      - name: Get commit information
        run: |
          # Get latest commit info from both repos before removing temp dirs
          FRONTEND_COMMIT=$(cd temp-frontend && git rev-parse HEAD)
          BACKEND_COMMIT=$(cd temp-backend && git rev-parse HEAD)
          FRONTEND_MSG=$(cd temp-frontend && git log -1 --pretty=format:"%s")
          BACKEND_MSG=$(cd temp-backend && git log -1 --pretty=format:"%s")

          echo "FRONTEND_COMMIT=$FRONTEND_COMMIT" >> $GITHUB_ENV
          echo "BACKEND_COMMIT=$BACKEND_COMMIT" >> $GITHUB_ENV
          echo "FRONTEND_MSG=$FRONTEND_MSG" >> $GITHUB_ENV
          echo "BACKEND_MSG=$BACKEND_MSG" >> $GITHUB_ENV

      - name: Copy files (excluding git history)
        run: |
          mkdir -p frontend backend
          # Copy all files including hidden ones, but exclude .git
          rsync -av --exclude='.git' temp-frontend/ frontend/
          rsync -av --exclude='.git' temp-backend/ backend/
          rm -rf temp-frontend temp-backend

      - name: Remove sensitive files
        run: |
          find frontend backend -name ".env*" -delete 2>/dev/null || true
          find frontend backend -name "node_modules" -type d -exec rm -rf {} + 2>/dev/null || true
          find frontend backend -name ".git" -type d -exec rm -rf {} + 2>/dev/null || true

      - name: Create sync info
        run: |
          cat << EOF > SYNC_INFO.md
          # Repo Sync Information

          **Last Synced:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')

          ## Frontend
          - **Branch:** feature/dashboard-integration
          - **Repository:** https://github.com/krishamaze/finetune-ERP-frontend.git
          - **Latest Commit:** $FRONTEND_COMMIT
          - **Commit Message:** $FRONTEND_MSG

          ## Backend
          - **Branch:** krishna/implement-phase-a1-admin-api-scaffold
          - **Repository:** https://github.com/krishamaze/finetune-ERP-backend.git
          - **Latest Commit:** $BACKEND_COMMIT
          - **Commit Message:** $BACKEND_MSG
          EOF

      - name: Commit and push changes
        run: |
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Sync repos: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git push
            echo "Changes synced successfully!"
          fi
