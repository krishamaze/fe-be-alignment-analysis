name: Auto-Sync Development Branches

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */2 * * *'
  repository_dispatch:
    types: [sync-dev-branches]

permissions:
  contents: write

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout analysis repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Auto-Sync"
          git config --local pull.ff only

      - name: Update submodules to latest
        run: |
          echo "Current submodule status:"
          git submodule status

          echo "Updating submodules to latest commits on their respective branches..."
          git submodule update --remote --merge

          echo "Updated submodule status:"
          git submodule status

      - name: Verify submodule sync
        run: |
          echo "Backend status:"
          echo "  Branch: $(git -C backend branch --show-current)"
          echo "  Commit: $(git -C backend rev-parse --short HEAD)"
          echo "  Message: $(git -C backend log -1 --pretty=format:'%s')"

          echo "Frontend status:"
          echo "  Branch: $(git -C frontend branch --show-current)"
          echo "  Commit: $(git -C frontend rev-parse --short HEAD)"
          echo "  Message: $(git -C frontend log -1 --pretty=format:'%s')"

      - name: Commit submodule updates
        run: |
          echo "Checking for submodule updates..."
          git add backend frontend
          if ! git diff --staged --quiet; then
            BACKEND_COMMIT=$(git -C backend rev-parse --short HEAD)
            FRONTEND_COMMIT=$(git -C frontend rev-parse --short HEAD)
            git commit -m "Auto-sync submodules: BE@${BACKEND_COMMIT} FE@${FRONTEND_COMMIT} - $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push
            echo "✅ Analysis repo updated with latest submodule commits"
          else
            echo "ℹ️ No submodule updates to commit"
          fi

      - name: Summary
        run: |
          echo "## 🔄 Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Repository Status" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend Repository**: krishamaze/finetune-ERP-backend" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend Branch**: krishna/implement-phase-a1-admin-api-scaffold" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend Commit**: \`$(cd backend && git rev-parse --short HEAD)\` - $(cd backend && git log -1 --pretty=format:'%s')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend Repository**: krishamaze/finetune-ERP-frontend" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend Branch**: feature/dashboard-integration" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend Commit**: \`$(cd frontend && git rev-parse --short HEAD)\` - $(cd frontend && git log -1 --pretty=format:'%s')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Sync Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Sync Time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "- **Workflow**: Auto-Sync Development Branches" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ Completed Successfully" >> $GITHUB_STEP_SUMMARY
