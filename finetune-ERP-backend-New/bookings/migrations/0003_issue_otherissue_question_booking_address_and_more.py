# Generated by Django 5.2 on 2025-08-24 04:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("bookings", "0002_booking_issue_booking_user_alter_booking_status"),
        ("store", "0006_storegeofence"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("issue_name", models.CharField(max_length=255)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="OtherIssue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("other_issue", models.CharField(max_length=455)),
                (
                    "other_issue_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_set_name", models.CharField(max_length=5)),
                ("question", models.CharField(max_length=655)),
            ],
        ),
        migrations.AddField(
            model_name="booking",
            name="address",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="booking",
            name="attendant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="attended_bookings",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="order_id",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="booking",
            name="priority",
            field=models.PositiveIntegerField(default=5),
        ),
        migrations.AddField(
            model_name="booking",
            name="remarks",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="booking",
            name="store",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="store.store",
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="verification_flags",
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AlterField(
            model_name="booking",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("approved", "Approved"),
                    ("in_progress", "In Progress"),
                    ("completed", "Completed"),
                    ("cancelled", "Cancelled"),
                    ("rejected", "Rejected"),
                ],
                default="pending",
                max_length=12,
            ),
        ),
        migrations.CreateModel(
            name="CustomerResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_set_name", models.CharField(blank=True, max_length=5)),
                ("question", models.CharField(max_length=655)),
                ("response", models.CharField(blank=True, max_length=655)),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bookings.booking",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BookingDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brand", models.CharField(blank=True, max_length=255)),
                ("product", models.CharField(blank=True, max_length=255)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "booking_for",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="details",
                        to="bookings.booking",
                    ),
                ),
                ("issues", models.ManyToManyField(blank=True, to="bookings.issue")),
                (
                    "other_issues",
                    models.ManyToManyField(blank=True, to="bookings.otherissue"),
                ),
            ],
        ),
    ]
